#include <iostream>
#include <cstring>
using namespace std;
const int MAX = 1001;
bool map[MAX][MAX];
bool f[MAX][MAX];
int N;
void read() {
	int t;
	cin >> N;
	for(int i = 1;i <= N;++i) {
		for(int j = 1;j <= N;++j) {
			cin >> t;
			map[i][j] = t%2;	
		}
	}
	for(int i = 1;i <= N;++i) {
		memset(f[i]+1, 1, sizeof(bool)*N);
	}
}

inline bool row(int &r, int &c) {
	bool sum = 0;
	for(int i = 1;i <= c;++i)
		sum ^= map[r][i];
	return !sum;
}

inline bool col(int &r, int &c) {
	bool sum = 0;
	for(int i = 1;i <= r;++i)
		sum ^= map[i][c];
	return !sum;
}

void solve() {
	for(int i = 1;i <= N;++i) {
		for(int j = 1;j <= N;++j) {
			if((f[i-1][j] || i==1) && row(i, j)) f[i][j] = false;
			if((f[i][j-1] || j==1) && col(i, j)) f[i][j] = false;
		}
	}
	if(!f[N][N])
		cout << 'W' << endl;
	else
		cout << 'L' << endl;
}

int main() {
	ios::sync_with_stdio(false);
	int T;
	cin >> T;
	for(int i = 0;i < T;++i) {
		read();
		solve();
	}
}
